apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: cur-ingestion
  namespace: spark-jobs
spec:
  type: Java
  mode: cluster
  image: "your-registry/cur-java-spark:latest"
  imagePullPolicy: Always
  mainClass: com.example.CURIngestionApp
  mainApplicationFile: "local:///opt/spark/jars/cur-java-spark-1.0-SNAPSHOT-jar-with-dependencies.jar"
  sparkVersion: "3.3.2"
  restartPolicy:
    type: Never
  volumes:
    - name: "google-cloud-key"
      secret:
        secretName: "gcp-service-account"
  driver:
    cores: 1
    coreLimit: "1200m"
    memory: "512m"
    labels:
      version: 3.3.2
    serviceAccount: spark
    volumeMounts:
      - name: "google-cloud-key"
        mountPath: "/var/run/secrets/google"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: "/var/run/secrets/google/key.json"
  executor:
    cores: 1
    instances: 2
    memory: "1g"
    labels:
      version: 3.3.2
    volumeMounts:
      - name: "google-cloud-key"
        mountPath: "/var/run/secrets/google"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: "/var/run/secrets/google/key.json"
  arguments:
    - "your-gcs-bucket"
    - "path/to/cur-file.csv"
    - "your-gcp-project-id"
    - "your_dataset.your_table"
  sparkConf:
    "spark.kubernetes.driver.annotation.prometheus.io/scrape": "true"
    "spark.kubernetes.driver.annotation.prometheus.io/path": "/metrics"
    "spark.kubernetes.driver.annotation.prometheus.io/port": "8090"
    "spark.kubernetes.executor.annotation.prometheus.io/scrape": "true"
    "spark.kubernetes.executor.annotation.prometheus.io/path": "/metrics"
    "spark.kubernetes.executor.annotation.prometheus.io/port": "8090"
    "spark.driver.extraJavaOptions": "-Divy.cache.dir=/tmp -Divy.home=/tmp"
    "spark.executor.extraJavaOptions": "-Divy.cache.dir=/tmp -Divy.home=/tmp"
    "spark.hadoop.fs.gs.impl": "com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystem"
    "spark.hadoop.fs.AbstractFileSystem.gs.impl": "com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS"
    "spark.hadoop.google.cloud.auth.service.account.enable": "true"
